package com.ucab.fin.finucab.fragment;import android.content.Context;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.v4.app.Fragment;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.ContextMenu;import android.view.GestureDetector;import android.view.LayoutInflater;import android.view.MenuInflater;import android.view.MenuItem;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.widget.Toast;import com.ucab.fin.finucab.R;import com.ucab.fin.finucab.activity.MainActivity;import com.ucab.fin.finucab.controllers.ExportarPresupuesto_Controller;import com.ucab.fin.finucab.controllers.Presupuesto_Controller;import com.ucab.fin.finucab.domain.Presupuesto;import com.ucab.fin.finucab.webservice.Parametros;import com.ucab.fin.finucab.webservice.ResponseWebServiceInterface;import java.util.ArrayList;/**Modulo 3 - Modulo de Presupuestos *Desarrolladores:*Mariángel Pérez / Oswaldo López / Aquiles Pulido *Descripción de la clase: *Esta clase se encarga de la visualizacion de los presupuestos de gastos **/public class GastosFragment extends Fragment implements ResponseWebServiceInterface {    // TODO: Rename and change types of parameters    FloatingActionButton fab;    MainActivity parentActivity;    public GastosFragment() {        // Required empty public constructor    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        View rootView = inflater.inflate(R.layout.gastos_fragment, container, false);        parentActivity = (MainActivity) getActivity();        fab = (FloatingActionButton) rootView.findViewById(R.id.addFloatingBtnGasto);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                parentActivity.changeFragment(new AgregarPresupuesto_fragment(), false);            }        });        final RecyclerView recycleList = (RecyclerView) rootView.findViewById(R.id.gastoReList);        LinearLayoutManager myLayoutManager = new LinearLayoutManager(getActivity());        myLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);        recycleList.setLayoutManager(myLayoutManager);        Presupuesto_Controller.interfaz = (ResponseWebServiceInterface) this;        recycleList.addOnItemTouchListener(new RecyclerTouchListener(getActivity(),                recycleList, new ClickListener() {            @Override            public void onClick(View view, final int position) {            }            @Override            public void onLongClick(View view, int position) {                Presupuesto_Controller.posicionLista = recycleList.getChildPosition(view) ;                Presupuesto_Controller.recyclerList = recycleList;                Presupuesto_Controller.tipoPresupuesto = false;                registerForContextMenu(recycleList);            }        }));        Presupuesto_Controller.asignarRecyclerView(recycleList,false);        return rootView;    }    @Override    public void onCreateContextMenu(ContextMenu menu, View v,                                    ContextMenu.ContextMenuInfo menuInfo)    {        super.onCreateContextMenu(menu, v, menuInfo);        MenuInflater inflater = getActivity().getMenuInflater();        inflater.inflate(R.menu.presupuesto_gasto_menu, menu);    }    @Override    public boolean onContextItemSelected(MenuItem item) {        switch (item.getItemId()) {            case R.id.modifySpendingOption:                parentActivity.changeFragment(new ModificarPresupuestoFragment(), false);                return true;            case R.id.deleteSpendingOpcion:                Presupuesto_Controller.eliminarPresupuestos(parentActivity,false);                return true;            default:                return super.onContextItemSelected(item);        }    }    /**     *  Se enacarga de mostrar un mensaje de error si no hay conexion con el web Service ademas de     *  cambiar el fragment al momento de eliminar exitosamente     * @param response     */    @Override    public void obtuvoCorrectamente(Object response) {        if(Parametros.getRespuesta().equals("Error")){            Presupuesto_Controller.mensajeError(parentActivity,"Error de conexion con servidor!");        }else{            Toast.makeText(parentActivity,"Eliminado Exitosamente",Toast.LENGTH_LONG).show();        }    }    @Override    public void noObtuvoCorrectamente(Object error) {    }    public static interface ClickListener{        public void onClick(View view,int position);        public void onLongClick(View view,int position);    }    class RecyclerTouchListener implements RecyclerView.OnItemTouchListener{        private ClickListener clicklistener;        private GestureDetector gestureDetector;        public RecyclerTouchListener(Context context, final RecyclerView recycleView, final ClickListener clicklistener){            this.clicklistener=clicklistener;            gestureDetector=new GestureDetector(context,new GestureDetector.SimpleOnGestureListener(){                @Override                public boolean onSingleTapUp(MotionEvent e) {                    return true;                }                @Override                public void onLongPress(MotionEvent e) {                    View child=recycleView.findChildViewUnder(e.getX(),e.getY());                    if(child!=null && clicklistener!=null){                        clicklistener.onLongClick(child,recycleView.getChildAdapterPosition(child));                    }                }            });        }        @Override        public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {            View child=rv.findChildViewUnder(e.getX(),e.getY());            if(child!=null && clicklistener!=null && gestureDetector.onTouchEvent(e)){                clicklistener.onClick(child,rv.getChildAdapterPosition(child));            }            return false;        }        @Override        public void onTouchEvent(RecyclerView rv, MotionEvent e) {        }        @Override        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {        }    }}